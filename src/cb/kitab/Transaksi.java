/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cb.kitab;

import cb.kitab.utils.Koneksi;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import cb.kitab.dialog.JDlgCari;
import cb.kitab.utils.PrintFile;
import cb.kitab.utils.TextUtils;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import javax.print.PrintException;
import javax.swing.table.TableColumn;


/**
 *
 * @author sanjaya
 */
public class Transaksi extends javax.swing.JFrame {
    private final Koneksi kn = new Koneksi();
    private ResultSet rsTmp,rsExe,rsShow;
    private DecimalFormat numFormat = new DecimalFormat("#,###,###");
    private Integer total,bayar,kembali;
    private String idTrans;

    /**
     * Creates new form Menu
     */
    public Transaksi() {
        KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        manager.addKeyEventDispatcher(new MyDispatcher());

        initComponents();
        setLocationRelativeTo(null);
        _bersih();
    }

    private class MyDispatcher implements KeyEventDispatcher {
        @Override
        public boolean dispatchKeyEvent(KeyEvent e) {
            if (e.getID() == KeyEvent.KEY_PRESSED) {
                if (e.getKeyCode() == KeyEvent.VK_F2){
                    cariSantri();
                }
                                
                if (e.getKeyCode() ==KeyEvent.VK_F3){
                    _bersih();
                }
                if (e.getKeyCode() ==KeyEvent.VK_F11){
                    cetakStruk(idTrans);
                }
            } else if (e.getID() == KeyEvent.KEY_RELEASED) {
//                System.out.println("2test2");
            } else if (e.getID() == KeyEvent.KEY_TYPED) {
//                System.out.println("3test3");
            }
            return false;
        }       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txNis = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblTrans = new javax.swing.JTable();
        jLbTotal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txBayar = new javax.swing.JTextField();
        jLbBayar = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txKembali = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLbnis = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLbNama = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLbKelasLama = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLbKamar = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLbKelasBaru = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transaksi");
        setState(6);

        txNis.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txNis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNisActionPerformed(evt);
            }
        });

        jTblTrans.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTblTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "PID", "Deskripsi", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTblTrans.setColumnSelectionAllowed(true);
        jTblTrans.setEnabled(false);
        jTblTrans.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTblTrans);
        jTblTrans.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTblTrans.getColumnModel().getColumnCount() > 0) {
            jTblTrans.getColumnModel().getColumn(0).setPreferredWidth(3);
            jTblTrans.getColumnModel().getColumn(2).setResizable(false);
        }

        jLbTotal.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLbTotal.setForeground(java.awt.Color.red);
        jLbTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLbTotal.setText("Total");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setLabelFor(txBayar);
        jLabel5.setText("Bayar");

        txBayar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txBayar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txBayar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txBayar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txBayarCaretUpdate(evt);
            }
        });
        txBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txBayarActionPerformed(evt);
            }
        });

        jLbBayar.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLbBayar.setForeground(java.awt.Color.green);
        jLbBayar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLbBayar.setText("0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setLabelFor(txKembali);
        jLabel7.setText("Kembali");

        txKembali.setEditable(false);
        txKembali.setBackground(new java.awt.Color(255, 255, 255));
        txKembali.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txKembali.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txKembali.setText("0");
        txKembali.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txKembali.setFocusable(false);
        txKembali.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txKembaliCaretUpdate(evt);
            }
        });

        jLabel2.setText("| F2 : Cari Siswa | F3 : Batalkan Transaksi |");

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setLabelFor(txNis);
        jLabel1.setText("NIS  :");

        jLbnis.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLbnis.setText("NIS");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setLabelFor(jLbNama);
        jLabel3.setText("Nama :");

        jLbNama.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLbNama.setText("Nama");

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setLabelFor(jLbKelasLama);
        jLabel6.setText("Kelas Lama:");

        jLbKelasLama.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLbKelasLama.setText("Kelas Lama");

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setLabelFor(jLbKamar);
        jLabel4.setText("Kamar:");

        jLbKamar.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLbKamar.setText("Kamar");

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setLabelFor(jLbKelasLama);
        jLabel8.setText("Kelas Baru:");

        jLbKelasBaru.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLbKelasBaru.setText("Kelas Baru");
        jLbKelasBaru.setMaximumSize(new java.awt.Dimension(34, 22));
        jLbKelasBaru.setMinimumSize(new java.awt.Dimension(34, 22));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLbnis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLbKamar, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLbKelasLama, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jLbKelasBaru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLbnis)
                            .addComponent(jLbKelasLama)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel4)
                        .addComponent(jLbKamar)
                        .addComponent(jLbKelasBaru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbNama)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txNis)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(185, 185, 185)
                        .addComponent(jLbBayar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLbTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txNis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLbTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(txKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLbBayar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txNisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNisActionPerformed
        if (txNis.getText().equals("")){
            txBayar.requestFocus();
            txBayar.selectAll();
                    
            return;
        }
        
        tampilData(txNis.getText());        
    }//GEN-LAST:event_txNisActionPerformed

    private void txBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txBayarActionPerformed
        if (hitungTotal() == 0) {
            return;            
        }
        
        if (jLbBayar.getForeground()==Color.green){
            total = hitungTotal();
            bayar = tryParseInt(txBayar.getText());
            kembali=  bayar - total;

            if (total > bayar){
                JOptionPane.showMessageDialog(rootPane, "pembayaran tidak cukup...");
                txBayar.selectAll();
                txKembali.setText("0");
                return;
            }

            jLbBayar.setForeground(Color.blue);
            txKembali.setText(numFormat.format(kembali)); 
        } else
        if (jLbBayar.getForeground()==Color.blue){
            simpanData();
        }            

    }//GEN-LAST:event_txBayarActionPerformed

    private void txKembaliCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txKembaliCaretUpdate
            jLbBayar.setText(txKembali.getText());            
    }//GEN-LAST:event_txKembaliCaretUpdate

    int tryParseInt(String value) { 
        try {  
            return Integer.parseInt(value);  
        } catch(NumberFormatException nfe) {  
            return 0;
        }  
}
    private void txBayarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txBayarCaretUpdate
        txKembali.setText("0");
        jLbBayar.setForeground(Color.green);
        
        if (txBayar.getText().equals("")) {
            jLbBayar.setText("0");            
        } else {
            jLbBayar.setText(numFormat.format(tryParseInt(txBayar.getText())));
            //jLbBayar.setText(txBayar.getText());
        }

    }//GEN-LAST:event_txBayarCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLbBayar;
    private javax.swing.JLabel jLbKamar;
    private javax.swing.JLabel jLbKelasBaru;
    private javax.swing.JLabel jLbKelasLama;
    private javax.swing.JLabel jLbNama;
    private javax.swing.JLabel jLbTotal;
    private javax.swing.JLabel jLbnis;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblTrans;
    private javax.swing.JTextField txBayar;
    private javax.swing.JTextField txKembali;
    private javax.swing.JTextField txNis;
    // End of variables declaration//GEN-END:variables

    
    private void tampilKitab(String _id) throws SQLException {
        clearTable();
        DefaultTableModel tbl = new DefaultTableModel();
        tbl= (DefaultTableModel) jTblTrans.getModel();
        Integer no = 1;
        /*
        tbl.addColumn("No");
        tbl.addColumn("PID");
        tbl.addColumn("Deskripsi");
        tbl.addColumn("Harga");
        jTblTrans.setModel(tbl);
        */
                
        rsShow = kn.stmt.executeQuery("select * from vwPaketKitab where idPaket ='"+_id+"' order by PID");
            while (rsShow.next()){
                tbl.addRow(new Object[]{
                new Integer(no++),
                rsShow.getString("PID"),
                rsShow.getString("MatPel"),
                new Integer(rsShow.getInt("Harga")),
                new Integer(rsShow.getInt("HPP"))
                });
                
                jTblTrans.setModel(tbl);
            }
            
            jLbTotal.setText(numFormat.format(hitungTotal()));        
    }

    private Integer hitungTotal() {
        Integer total = 0;
        for (int i = 0; i < jTblTrans.getRowCount(); i++) {
            total += (Integer) jTblTrans.getValueAt(i, 3);
        }
        
        return total;
    }

    private void clearTable() {
        jTblTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "PID", "Deskripsi", "Harga","HPP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, 
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });

        int[] columnsWidth = {
                50, 75, 470, 100, 0
        };

        int i = 0;
        for (int width : columnsWidth) {
            TableColumn column = jTblTrans.getColumnModel().getColumn(i++);
            column.setMinWidth(width);
            column.setMaxWidth(width);
            column.setPreferredWidth(width);
        }       
    }

    @SuppressWarnings("empty-statement")
    private String _idTrans() {
        String tgl,hari = "00000000",kd = "";
        Integer tot=0;
        
        try {
            rsTmp = kn.stmt.executeQuery("select count(id_Trans) as tot, date(now()) as sekarang from "+
                    "tb_jual_global where Tanggal = date(now())");
        rsTmp.first();
        
        tgl =rsTmp.getString("sekarang");
        hari = tgl.replace("-", "");
        
        tot = rsTmp.getInt("tot")+1;
        
        
        } catch (SQLException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tot<10000)  {kd="";}
        if (tot<1000)   {kd="0";}
        if (tot<100)    {kd="00";}
        if (tot<10)     {kd="000";}
        
        return "TR-"+hari+"-"+kd+Integer.toString(tot);        
    }

    private void simpanData() {
        String _isi = "",_id= _idTrans();
        
        for (int i = 0; i < jTblTrans.getRowCount(); i++) {
            _isi += "('"+_id+"','"+jTblTrans.getValueAt(i, 0)+
                    "','"+jTblTrans.getValueAt(i, 1)+
                    "','"+jTblTrans.getValueAt(i, 4)+
                    "','"+jTblTrans.getValueAt(i, 3)+"'),";
        }
        _isi=_isi.substring(0,_isi.length()-1);
        //System.out.println(_isi);
        
        try {
        //if (kn.conn.getAutoCommit()){kn.conn.setAutoCommit(false);}
        
        kn.conn.setAutoCommit(false);
        
        kn.stmt.executeUpdate("insert into tb_jual_global(id_Trans,Tanggal,jam,NIS,Total,Bayar,Kembali) values "+
                "('"+_id+"',date(now()),time(now()),'"+jLbnis.getText()
                +"','"+total+"','"+bayar+"','"+kembali+"')");
        
        kn.stmt.executeUpdate("insert into tb_jual_rinci(id_Trans,no,PID,HPP,Harga) values "+_isi );
        
        
        kn.conn.commit();
        
        JOptionPane.showMessageDialog(rootPane, "Data Berhasil disimpan...");
        this.idTrans = _id;    
        cetakStruk(this.idTrans);
        
        _bersih();
         } catch (SQLException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
                
   }

    private void cetakStruk(String KodeTrans) {
        char ent = '\n';
        String data="",_harga,_total,_bayar,_kembali;
        int lebar = 38;
        
        if ((KodeTrans.equals(""))|| (KodeTrans.equals(null))){
            System.out.println("data kosong....");
            return;
        }
        
        try {
            rsShow = kn.stmt.executeQuery("select * from vwJualKitab where id_Trans='"+KodeTrans+"'");
            rsShow.first();
            
            _total = numFormat.format(rsShow.getInt("Total"));
            _bayar = numFormat.format(rsShow.getInt("Bayar"));
            _kembali = numFormat.format(rsShow.getInt("Kembali"));
            
            for (int i = 0; i < lebar; i++) {data+="=";}
            data+= ent;
            
            data+= "kd Trans. : "+rsShow.getString("id_Trans")+ent;
            data+= "Siswa     : "+rsShow.getString("Nama")+ent;
            data+= "Kelas     : "+rsShow.getString("KelasBaru")+ent;
            data+= "Tgl/Jam   : "+rsShow.getString("Tanggal")+" "+rsShow.getString("jam")+ent;
            
            for (int i = 0; i < lebar; i++) {data+="-";}
            data+= ent;
            
            do{  
                _harga = numFormat.format(rsShow.getInt("Harga"));
                data+= TextUtils.wrapText(rsShow.getString("no")+" . " + rsShow.getString("MatPel"),lebar,4)+ent;
                data+= TextUtils.setText(_harga +" X 1 PCS =  "+_harga, lebar, 2)+ent;
            } while (rsShow.next());
            
            for (int i = 0; i < lebar; i++) {data+="-";}
            data+= ent;
             
            data+= "Total   :";
            data+= TextUtils.setText(_total, lebar-9, 2)+ent;
            data+= "Bayar   :";
            data+= TextUtils.setText(_bayar, lebar-9, 2)+ent;
            data+= "Kembali :";
            data+= TextUtils.setText(_kembali, lebar-9, 2)+ent;
            data+= ent;
            data+= TextUtils.setText("TERIMA KASIH", lebar, 1)+ent+ent+ent+ent;
            
            data+= TextUtils.setText("DUTA SWALAYAN", lebar, 1)+ent;
            data+= TextUtils.setText("Telp. (0343) 613882", lebar, 1)+ent;
            
            TextUtils.SimpankeFile(data, "cetak.prn");
            
            //PrintException | IOException | 
            PrintFile.printTextFile("cetak.prn");
                
        } catch ( PrintException | IOException | SQLException ex) {
                Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    private void _bersih() {
        jLbnis.setText("");
        jLbNama.setText("");
        jLbKelasLama.setText("");
        jLbKelasBaru.setText("");
        jLbKamar.setText("");
        jLbTotal.setText("");

        jLbTotal.setText("Total");

        txNis.requestFocus();
        txNis.setText("");
        txBayar.setText("0");
        
        jLbBayar.setText("0");
        
        clearTable();
    }

    private void cariSantri() {
        txNis.requestFocus();
        JDlgCari cr = new JDlgCari(this, true,"select NIS,Nama,Kamar,KelasLama,KelasBaru from vw_santri","Nama");
        cr.setTitle("Cari Siswa");
        cr.setVisible(true);
        if (cr.dicari()){
            tampilData(cr.getHasil(0));
        }
    }

    private void tampilData(String kode) {        
        try {
            rsTmp = kn.stmt.executeQuery("select * from vw_santri where NIS ='"+kode+"'");
            
            if (rsTmp.last()){
                jLbnis.setText(rsTmp.getString("NIS"));
                jLbNama.setText(rsTmp.getString("Nama"));
                jLbKelasLama.setText(rsTmp.getString("KelasLama"));
                jLbKelasBaru.setText(rsTmp.getString("KelasBaru"));
                jLbKamar.setText(rsTmp.getString("Kamar"));
                tampilKitab(rsTmp.getString("idPaket"));
                jLbBayar.setText("0");
            } else {
                _bersih();
                JOptionPane.showMessageDialog(rootPane, "Data tidak ditemukan", "Not Found", 
                      JOptionPane.ERROR_MESSAGE);

            }
            
            rsExe = kn.stmt.executeQuery("SELECT DISTINCT NIS FROM tb_jual_global WHERE NIS = '"+kode+"'");
            if (rsExe.last()){
                JOptionPane.showMessageDialog(rootPane, "Siswa ini sudah melakukan pembelian...", "Sudah Beli", 
                      JOptionPane.ERROR_MESSAGE);
                _bersih();
            }

            txNis.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }
}
